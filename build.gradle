def ARTIFACT_VERSION = "1.0.0"
def ARTIFACT_NAME = file(".").absoluteFile.name

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
    }
}

repositories {
    maven { url "http://eaglesakura.github.io/maven/" }
    mavenCentral()
}

apply plugin: 'java'

sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    compile 'com.eaglesakura:simple-logger:1.0.0'
    compile 'com.fasterxml.jackson.core:jackson-core:2.4.6'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.6'
}

apply plugin: 'maven'

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri(new File("${System.env.MAVEN_LOCAL_REPO}")))
            pom.version = ARTIFACT_VERSION
            pom.groupId = "com.eaglesakura"
            pom.artifactId = ARTIFACT_NAME
        }
    }
}

[uploadArchives.repositories.mavenDeployer]*.pom*.whenConfigured { pom ->
    pom.project {
        inceptionYear '2016'
        packaging 'jar'
        licenses {
            license {
                name 'MIT License'
                url "https://raw.githubusercontent.com/eaglesakura/${ARTIFACT_NAME}/master/LICENSE.txt"
            }
        }
        dependencies {
            dependency {
                groupId = 'com.fasterxml.jackson.core'
                artifactId = 'jackson-core'
                version = '2.4.6'
                scope = 'compile'
            }

            dependency {
                groupId = 'com.fasterxml.jackson.core'
                artifactId = 'jackson-databind'
                version = '2.4.6'
                scope = 'compile'
            }
        }
    }
}

task uploadJavadoc << {
    def src = file("build/docs/javadoc/");
    def dst = new File("${System.env.MAVEN_LOCAL_REPO}/doc/${ARTIFACT_NAME}/");
    dst.deleteDir();
    dst.mkdirs();

    ["/usr/bin/rsync", "-a", src.absolutePath, dst.absolutePath].execute().text;
}
